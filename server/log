user 
const bcrypt = require("bcryptjs");
const jwt = require("jsonwebtoken");

const { sql,poolPromise } = require('../config/db')
const fs = require('fs');
var rawdata = fs.readFileSync('./query/query.json');
var queries = JSON.parse(rawdata);

const secret = 'test';
class MainController {



async signin(req , res){
  const { username, password } = req.body;
    
      try {
         if(username != null && username != null) {
        
          const pool = await poolPromise
          const result = await pool.request()
         .input('pass',sql.VarChar , password)
         .input('compte',sql.VarChar,username)
         
          .query(queries.getUser);
          
          
            
          if(result.recordset.length > 0){

            const token = jwt.sign({ username: result.username, id: result._id }, secret, { expiresIn: "1h" });

            res.cookie('Token', token,{
              httpOnly: true,
              maxAge: 24 * 60 * 60 * 1000
          });
  
           res.status(200).json({ result: result, token });
          }else{

            // const r=result.recordset[0].username ;
            // console.log(r);
            console.log('No hay datos en la tabla')
            return res.status(404).json({ message: "User doesn't exist"  });
             // if (!result.username) return res.status(404).json({ message: "User doesn't exist" });
      
        //   if (!result.password) return res.status(400).json({ message: "Invalid credentials" });
          }   
      


         } else {
           res.send('All fields are required!')
           console.log(req.body.password + req.body.username)
       }
      } catch (error) {
       
        res.status(500).json({ message: "Something went wrong" });
      }
    }
 
}

const user = new MainController()
module.exports = user;